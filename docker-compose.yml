version: '3.8'

services:
  backend:
    build:
      context: ./stock_backend
    ports:
      - "8002:8000"
    # volumes:
    #   - ./stock_backend:/app
    depends_on:
      - db
    environment:
      - STOCK_SYMBOLS=TCS.NS,ITC.NS,COALINDIA.NS,RR.L,HSBA.L
      - DEBUG=1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=mydb
      - DB_USER=rudra
      - DB_PASSWORD=1234
    networks:
      - stock-network

  frontend:
    build:
      context: ./stock-dashboard
    ports:
      - "3002:3000"
    volumes:
      - ./stock-dashboard:/app
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8002
    networks:
      - stock-network

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=rudra
      - POSTGRES_PASSWORD=1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - stock-network
    ports:
    - "5433:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rudra -d mydb"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9002:9090"  
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - stock-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3005:3000"  
    depends_on:
      - prometheus
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - stock-network

  metrics_collector: 
    build:
      context: ./metrics_collector
    ports:
      - "7878:7878"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - stock-network

volumes:
  postgres_data:

networks:
  stock-network:
    driver: bridge

